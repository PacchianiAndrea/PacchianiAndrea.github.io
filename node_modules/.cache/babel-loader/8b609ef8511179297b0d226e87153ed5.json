{"ast":null,"code":"import React from'react';import{Container,Typography,Button,Grid}from'@material-ui/core';import CartItem from'./CartItem/CartItem';import useStyles from'./styles';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Cart=function Cart(_ref){var cart=_ref.cart;var classes=useStyles();console.log(cart);var renderEmptyCart=function renderEmptyCart(){return/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",children:\"You have no items in your shopping cart,\"});};if(!cart.total_unique_items)return'Loading';var renderCart=function renderCart(){return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{container:true,spacing:3,children:cart.line_items.map(function(lineItem){return/*#__PURE__*/_jsx(Grid,{item:true,xs:12,sm:4,children:/*#__PURE__*/_jsx(CartItem,{item:lineItem})},lineItem.id);})}),/*#__PURE__*/_jsxs(\"div\",{className:classes.cardDetails,children:[/*#__PURE__*/_jsxs(Typography,{variant:\"h4\",children:[\"Subtotal: \",cart.subtotal.formatted_with_symbol]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Button,{className:classes.emptyButton,size:\"large\",type:\"button\",variant:\"contained\",color:\"secondary\",children:\"Empty cart\"}),/*#__PURE__*/_jsx(Button,{className:classes.checkoutButton,size:\"large\",type:\"button\",variant:\"contained\",color:\"primary\",children:\"Checkout\"})]})]})]});};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"div\",{className:classes.toolbar}),/*#__PURE__*/_jsx(Typography,{className:classes.title,variant:\"h3\",gutterBottom:true,children:\"Your Shopping Cart\"}),!cart.total_unique_items?renderEmptyCart():renderCart()]});};export default Cart;","map":{"version":3,"sources":["/Users/andreapacchiani/Desktop/JavaScript/store/src/components/Cart/Cart.jsx"],"names":["React","Container","Typography","Button","Grid","CartItem","useStyles","Cart","cart","classes","console","log","renderEmptyCart","total_unique_items","renderCart","line_items","map","lineItem","id","cardDetails","subtotal","formatted_with_symbol","emptyButton","checkoutButton","toolbar","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,CAAoBC,UAApB,CAAgCC,MAAhC,CAAwCC,IAAxC,KAAoD,mBAApD,CAEA,MAAOC,CAAAA,QAAP,KAAqB,qBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,UAAtB,C,6IAEA,GAAMC,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,MAAa,IAAVC,CAAAA,IAAU,MAAVA,IAAU,CACxB,GAAMC,CAAAA,OAAO,CAAGH,SAAS,EAAzB,CAEFI,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAEE,GAAMI,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,sBACtB,KAAC,UAAD,EAAY,OAAO,CAAC,WAApB,sDADsB,EAAxB,CAMA,GAAI,CAACJ,IAAI,CAACK,kBAAV,CAA8B,MAAO,SAAP,CAG9B,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,sBACjB,wCACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,UACGN,IAAI,CAACO,UAAL,CAAgBC,GAAhB,CAAoB,SAACC,QAAD,qBACnB,KAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,uBACA,KAAC,QAAD,EAAU,IAAI,CAAEA,QAAhB,EADA,EAA+BA,QAAQ,CAACC,EAAxC,CADmB,EAApB,CADH,EADF,cAUE,aAAK,SAAS,CAAET,OAAO,CAACU,WAAxB,wBACE,MAAC,UAAD,EAAY,OAAO,CAAC,IAApB,wBAAoCX,IAAI,CAACY,QAAL,CAAcC,qBAAlD,GADF,cAEE,oCACE,KAAC,MAAD,EAAQ,SAAS,CAAEZ,OAAO,CAACa,WAA3B,CAAwC,IAAI,CAAC,OAA7C,CAAqD,IAAI,CAAC,QAA1D,CAAmE,OAAO,CAAC,WAA3E,CAAuF,KAAK,CAAC,WAA7F,wBADF,cAEE,KAAC,MAAD,EAAQ,SAAS,CAAEb,OAAO,CAACc,cAA3B,CAA4C,IAAI,CAAC,OAAjD,CAAyD,IAAI,CAAC,QAA9D,CAAuE,OAAO,CAAC,WAA/E,CAA2F,KAAK,CAAC,SAAjG,sBAFF,GAFF,GAVF,GADiB,EAAnB,CAqBA,mBACE,MAAC,SAAD,yBACE,YAAK,SAAS,CAAEd,OAAO,CAACe,OAAxB,EADF,cAEE,KAAC,UAAD,EAAY,SAAS,CAAEf,OAAO,CAACgB,KAA/B,CAAsC,OAAO,CAAC,IAA9C,CAAmD,YAAY,KAA/D,gCAFF,CAGI,CAACjB,IAAI,CAACK,kBAAN,CAA2BD,eAAe,EAA1C,CAA+CE,UAAU,EAH7D,GADF,CAQD,CA3CD,CA6CA,cAAeP,CAAAA,IAAf","sourcesContent":["import React from 'react';\nimport { Container, Typography, Button, Grid } from '@material-ui/core';\n\nimport CartItem from './CartItem/CartItem';\nimport useStyles from './styles';\n\nconst Cart = ({ cart}) => {\n  const classes = useStyles();\n\nconsole.log(cart)\n\n  const renderEmptyCart = () => (\n    <Typography variant=\"subtitle1\">You have no items in your shopping cart,\n     \n    </Typography>\n  );\n\n  if (!cart.total_unique_items) return 'Loading';\n\n\n  const renderCart = () => (\n    <>\n      <Grid container spacing={3}>\n        {cart.line_items.map((lineItem) => (\n          <Grid item xs={12} sm={4} key={lineItem.id}>\n          <CartItem item={lineItem} />\n\n\n          </Grid>\n        ))}\n      </Grid>\n      <div className={classes.cardDetails}>\n        <Typography variant=\"h4\">Subtotal: {cart.subtotal.formatted_with_symbol}</Typography>\n        <div>\n          <Button className={classes.emptyButton} size=\"large\" type=\"button\" variant=\"contained\" color=\"secondary\" >Empty cart</Button>\n          <Button className={classes.checkoutButton}  size=\"large\" type=\"button\" variant=\"contained\" color=\"primary\">Checkout</Button>\n        </div>\n      </div>\n    </>\n  );\n\n  return (\n    <Container>\n      <div className={classes.toolbar} />\n      <Typography className={classes.title} variant=\"h3\" gutterBottom>Your Shopping Cart</Typography>\n      { !cart.total_unique_items ? renderEmptyCart() : renderCart() }\n      \n    </Container>\n  );\n};\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}