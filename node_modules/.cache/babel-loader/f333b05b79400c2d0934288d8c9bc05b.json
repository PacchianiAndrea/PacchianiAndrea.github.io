{"ast":null,"code":"var _jsxFileName = \"/Users/andreapacchiani/Desktop/JavaScript/store/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Cart from \"./components/Cart/Cart\";\nimport NavBar from './components/NavBar/NavBar';\nimport { commerce } from './lib/commerce'; //eslint-disable-next-line\n\nimport Products from './components/Products/Products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  //eslint-disable-next-line\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState({});\n\n  const fetchProducts = async () => {\n    const {\n      data\n    } = await commerce.products.list();\n    setProducts(data);\n  };\n\n  const fetchCart = async () => {\n    setCart(await commerce.cart.retrieve());\n  }; //eslint-disable-next-line\n\n\n  const aggiungiAlCarrello = async (productId, quantity) => {\n    const item = await commerce.cart.add(productId, quantity);\n    setCart(item.cart);\n  };\n\n  const svuotaCarrello = async () => {\n    const response = await commerce.cart.empty();\n    setCart(response.cart);\n  };\n\n  const aggiornaCarrello = async (productId, quantity) => {\n    const {\n      cart\n    } = await commerce.cart.update(productId, {\n      quantity\n    });\n    setCart(cart);\n  };\n\n  const rimuoviElemento = async productId => {\n    const {\n      cart\n    } = await commerce.cart.remove(productId);\n    setCart(cart);\n  };\n\n  useEffect(() => {\n    fetchProducts();\n    fetchCart();\n  }, []);\n  console.log(cart);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      totalItems: cart.total_items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      products: products,\n      onAddToCart: aggiungiAlCarrello\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Cart, {\n      cart: cart,\n      empty: svuotaCarrello,\n      update: aggiornaCarrello,\n      rimuovi: rimuoviElemento\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"VMLmGxnjS/ap6fEyKSPnbb3xR6k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/andreapacchiani/Desktop/JavaScript/store/src/App.js"],"names":["React","useState","useEffect","Cart","NavBar","commerce","Products","App","products","setProducts","cart","setCart","fetchProducts","data","list","fetchCart","retrieve","aggiungiAlCarrello","productId","quantity","item","add","svuotaCarrello","response","empty","aggiornaCarrello","update","rimuoviElemento","remove","console","log","total_items"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,QAAR,QAAuB,gBAAvB,C,CACA;;AACA,OAAOC,QAAP,MAAqB,gCAArB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMW,aAAa,GAAG,YAAY;AAC9B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMR,QAAQ,CAACG,QAAT,CAAkBM,IAAlB,EAAvB;AAEAL,IAAAA,WAAW,CAACI,IAAD,CAAX;AACD,GAJH;;AAME,QAAME,SAAS,GAAG,YAAY;AAC5BJ,IAAAA,OAAO,CAAC,MAAMN,QAAQ,CAACK,IAAT,CAAcM,QAAd,EAAP,CAAP;AACD,GAFD,CAZY,CAeZ;;;AACF,QAAMC,kBAAkB,GAAG,OAAOC,SAAP,EAAkBC,QAAlB,KAA8B;AACrD,UAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACK,IAAT,CAAcW,GAAd,CAAkBH,SAAlB,EAA6BC,QAA7B,CAAnB;AACAR,IAAAA,OAAO,CAACS,IAAI,CAACV,IAAN,CAAP;AACH,GAHD;;AAKA,QAAMY,cAAc,GAAG,YAAY;AAC/B,UAAMC,QAAQ,GAAG,MAAMlB,QAAQ,CAACK,IAAT,CAAcc,KAAd,EAAvB;AACAb,IAAAA,OAAO,CAACY,QAAQ,CAACb,IAAV,CAAP;AACD,GAHH;;AAKE,QAAMe,gBAAgB,GAAG,OAAOP,SAAP,EAAkBC,QAAlB,KAA+B;AACtD,UAAM;AAACT,MAAAA;AAAD,QAAS,MAAML,QAAQ,CAACK,IAAT,CAAcgB,MAAd,CAAqBR,SAArB,EAAgC;AAACC,MAAAA;AAAD,KAAhC,CAArB;AACAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD;;AAKA,QAAMiB,eAAe,GAAG,MAAOT,SAAP,IAAoB;AAC1C,UAAM;AAACR,MAAAA;AAAD,QAAS,MAAML,QAAQ,CAACK,IAAT,CAAckB,MAAd,CAAqBV,SAArB,CAArB;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACD,GAHD;;AAKFR,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,aAAa;AACbG,IAAAA,SAAS;AACZ,GAHQ,EAGP,EAHO,CAAT;AAMAc,EAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AAMA,sBAEI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEA,IAAI,CAACqB;AAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEvB,QAApB;AAA8B,MAAA,WAAW,EAAES;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAIG,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEP,IAAZ;AAAkB,MAAA,KAAK,EAAEY,cAAzB;AAAyC,MAAA,MAAM,EAAEG,gBAAjD;AAAmE,MAAA,OAAO,EAAEE;AAA5E;AAAA;AAAA;AAAA;AAAA,YAJH;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAWH,CA3DD;;GAAMpB,G;;KAAAA,G;AA6DN,eAAeA,GAAf","sourcesContent":["import React, {useState , useEffect} from 'react'\nimport Cart from \"./components/Cart/Cart\"\nimport NavBar from './components/NavBar/NavBar';\nimport {commerce} from './lib/commerce'\n//eslint-disable-next-line\nimport Products from './components/Products/Products'\n\n\nconst App = () => {\n    //eslint-disable-next-line\n    const [products, setProducts] = useState([]);\n    const [cart, setCart] = useState({})\n\n\n    const fetchProducts = async () => {\n        const { data } = await commerce.products.list();\n\n        setProducts(data);\n      };\n\n      const fetchCart = async () => {\n        setCart(await commerce.cart.retrieve());\n      };\n      //eslint-disable-next-line\n    const aggiungiAlCarrello=  async (productId, quantity) =>{\n        const item = await commerce.cart.add(productId, quantity);\n        setCart(item.cart);\n    }\n\n    const svuotaCarrello = async () => {\n        const response = await commerce.cart.empty();    \n        setCart(response.cart);\n      };\n\n      const aggiornaCarrello = async (productId, quantity) => {\n        const {cart} = await commerce.cart.update(productId, {quantity});\n        setCart(cart);\n      };\n\n      const rimuoviElemento = async (productId) =>{\n        const {cart} = await commerce.cart.remove(productId);\n        setCart(cart);\n      }\n\n    useEffect(() => {\n        fetchProducts();\n        fetchCart();\n    },[]);\n\n\n    console.log(cart)\n\n\n\n\n\n    return(\n\n        <div>\n            <NavBar totalItems={cart.total_items}/>\n            <Products products={products} onAddToCart={aggiungiAlCarrello}/>\n            <hr/>\n           <Cart cart={cart} empty={svuotaCarrello} update={aggiornaCarrello} rimuovi={rimuoviElemento} />\n\n            \n        </div>\n    )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}